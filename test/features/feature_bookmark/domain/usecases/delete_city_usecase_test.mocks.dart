// Mocks generated by Mockito 5.2.0 from annotations
// in weatherBs/test/features/feature_bookmark/domain/usecases/delete_city_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weatherBs/core/resources/data_state.dart' as _i2;
import 'package:weatherBs/features/feature_bookmark/domain/entities/city_model.dart'
    as _i5;
import 'package:weatherBs/features/feature_bookmark/domain/repository/city_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDataState_0<T> extends _i1.Fake implements _i2.DataState<T> {}

/// A class which mocks [CityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCityRepository extends _i1.Mock implements _i3.CityRepository {
  MockCityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<_i5.City>> saveCityToDB(String? cityName) =>
      (super.noSuchMethod(Invocation.method(#saveCityToDB, [cityName]),
              returnValue: Future<_i2.DataState<_i5.City>>.value(
                  _FakeDataState_0<_i5.City>()))
          as _i4.Future<_i2.DataState<_i5.City>>);
  @override
  _i4.Future<_i2.DataState<List<_i5.City>>> getAllCityFromDB() =>
      (super.noSuchMethod(Invocation.method(#getAllCityFromDB, []),
              returnValue: Future<_i2.DataState<List<_i5.City>>>.value(
                  _FakeDataState_0<List<_i5.City>>()))
          as _i4.Future<_i2.DataState<List<_i5.City>>>);
  @override
  _i4.Future<_i2.DataState<_i5.City?>> findCityByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#findCityByName, [name]),
              returnValue: Future<_i2.DataState<_i5.City?>>.value(
                  _FakeDataState_0<_i5.City?>()))
          as _i4.Future<_i2.DataState<_i5.City?>>);
  @override
  _i4.Future<_i2.DataState<String>> deleteCityByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#deleteCityByName, [name]),
              returnValue: Future<_i2.DataState<String>>.value(
                  _FakeDataState_0<String>()))
          as _i4.Future<_i2.DataState<String>>);
}
