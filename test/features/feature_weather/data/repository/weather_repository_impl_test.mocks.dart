// Mocks generated by Mockito 5.2.0 from annotations
// in weatherBs/test/features/feature_weather/data/repository/weather_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weatherBs/core/params/ForecastParams.dart' as _i4;
import 'package:weatherBs/features/feature_weather/data/data_source/remote/ApiProvider.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ApiProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiProvider extends _i1.Mock implements _i2.ApiProvider {
  MockApiProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey =>
      (super.noSuchMethod(Invocation.getter(#apiKey), returnValue: '')
          as String);
  @override
  set apiKey(String? _apiKey) =>
      super.noSuchMethod(Invocation.setter(#apiKey, _apiKey),
          returnValueForMissingStub: null);
  @override
  _i3.Future<dynamic> sendRequestCurrentWeather(dynamic cityname) => (super
      .noSuchMethod(Invocation.method(#sendRequestCurrentWeather, [cityname]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> sendRequest7DaysForcast(_i4.ForecastParams? params) =>
      (super.noSuchMethod(Invocation.method(#sendRequest7DaysForcast, [params]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> sendRequestCitySuggestion(String? prefix) => (super
      .noSuchMethod(Invocation.method(#sendRequestCitySuggestion, [prefix]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
